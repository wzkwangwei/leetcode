/*class Solution {
public:
    int romanToInt(string s) {
        int result = 0;
        std::string::iterator iter_begin = s.begin();
        int length = s.length();
        for(int i = 0; i < length; i++)
        {
            if(s[i] == 'M')
            {
                result += 1000;
            }
            else if(s[i] == 'D')
            {
                result += 500;
            }
            else if(s[i] == 'C')
            {
                if((i+1) < length)
                {
                    if(s[i+ 1] == 'M')
                    {
                        result += 900;
                        i++;
                    }
                    else if(s[i+ 1] == 'D')
                    {
                        result += 400;
                        i++;
                    }
                    else
                    {
                        result += 100;
                    }
                }
                else
                {
                    result += 100;
                }
            }
            else if(s[i] == 'L')
            {
                result += 50;
            }
            else if(s[i] == 'X')
            {
                if((i+1) < length)
                {
                    if(s[i+ 1] == 'C')
                    {
                        result += 90;
                        i++;
                    }
                    else if(s[i+ 1] == 'L')
                    {
                        result += 40;
                        i++;
                    }
                    else
                    {
                        result += 10;
                    }
                }
                else
                {
                    result += 10;
                }
            }
            else if(s[i] == 'V')
            {
                result += 5;
            }
            else if(s[i] == 'I')
            {
                if((i+1) < length)
                {
                    if(s[i+ 1] == 'X')
                    {
                        result += 9;
                        i++;
                    }
                    else if(s[i+ 1] == 'V')
                    {
                        result += 4;
                        i++;
                    }
                    else
                    {
                        result += 1;
                    }
                }
                else
                {
                    result += 1;
                }
            }
        }
        return result;
    }
};*/
class Solution {
public:
    int romanToInt(string s) {
        int res = 0;
        unordered_map<char, int> m{{'I', 1}, {'V', 5}, {'X', 10}, {'L', 50}, {'C', 100}, {'D', 500}, {'M', 1000}};
        for (int i = 0; i < s.size(); ++i) {
            int val = m[s[i]];
            if (i == s.size() - 1 || m[s[i+1]] <= m[s[i]]) res += val;
            else res -= val;
        }
        return res;
    }
};
#include<algorithm>
#include<vector>
class Solution {
public:
    vector<vector<int>> threeSum(vector<int>& nums) {
        vector<int> numSet(3);
        vector< vector<int> > r;
        sort(nums.begin(),nums.end());
        int sum;
        int len = nums.size();
        for(int i = 0; i < len - 2; i++)
        {
            //将第一个数字取出，转换为2数求和问题
            sum = 0 - nums[i];
            numSet[0] = nums[i];
            //求解两数求和的问题
            for(int j = i + 1, k = len - 1; j < k;)
            {
                if(nums[j] + nums[k] == sum)
                {
                    numSet[1] = nums[j++];
                    numSet[2] = nums[k--];
                    r.push_back(numSet);
                    while(j < k && nums[j] == nums[j-1]) //避免重复
                    {
                        j++;
                    }
                    while(j < k && nums[k] == nums[k+1]) //避免重复
                    {
                        k--;
                    }
                }
                else if(nums[j] + nums[k] < sum)
                {
                    j++;
                }
                else
                {
                    k--;
                }
            }
            while(i < len - 2 && nums[i] == nums[i + 1]) //避免重复
            {
                i++;
            }
        }
        return r;
    }
};
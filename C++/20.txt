//Valid Parentheses        
class Solution {
public:
    bool isValid(string s) {
        stack<char> stk;           //通过压栈的方式进行判断，
        int length = s.length();
        for(int i = 0; i < length; i++)
        {
            if(s[i] =='(' || s[i] == '[' || s[i] == '{')
            {
                stk.push(s[i]);    //若为左括号，则压入栈中
            }
            else
            {
                if(stk.empty())
                {
                    return false;
                }
                else if(stk.top()== '(' && s[i] == ')')     //判断此时的括号是否与栈顶的括号成对
                {
                    stk.pop();
                }
                else if(stk.top() == '[' && s[i] == ']')
                {
                    stk.pop();
                }
                else if(stk.top() == '{' && s[i] == '}')
                {
                    stk.pop();
                }
                else
                {
                    return false;
                }
            }
        }
        if(stk.empty())          //栈为空，则所有括号已经形成配对
        {
            return true;
        }
        else
        {
            return false;
        }
    }
};
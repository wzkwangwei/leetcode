class Solution {
public:
    int lengthOfLongestSubstring(string s) {
        int i, start, n, maxlen;
        map<char, int> index;
        n = s.length();
        start = -1;
        //i = 0;
        //j = 0;
        maxlen = 0;
        for(i = 0; i < n; i++)
        {
            if(index.count(s[i]) != 0)
            {
                start = max(start, index[s[i]]);
                //start = index[s[i]];
            }
            maxlen = max(maxlen, i - start);
            index[s[i]] = i;
        }
        //while(i < n && j < n) 
        //{
        //    if(index.count(s[j]) == 0)
        //    {
        //        index.insert(pair<char, int>(s[j],j));
        //        j++;
        //        maxlen = max(maxlen, j - i);
        //    }
        //    else
        //    {
        //        index.erase(s[i]);
        //        i++;
        //    }
        //}
        return maxlen;
    }
};